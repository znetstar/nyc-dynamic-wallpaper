/** Generated from https://keisan.casio.com/exec/system/1224682277 */
const str = `00:00	-14.31	59.09
00:15	-13.45	55.62
00:30	-12.62	52.16
00:45	-11.83	48.69
01:00	-11.08	45.23
01:15	-10.38	41.77
01:30	-9.72	38.30
01:45	-9.11	34.83
02:00	-8.55	31.36
02:15	-8.05	27.88
02:30	-7.59	24.40
02:45	-7.20	20.92
03:00	-6.86	17.43
03:15	-6.58	13.94
03:30	-6.36	10.45
03:45	-6.21	6.96
04:00	-6.11	3.46
04:15	-6.08	359.96
04:30	-6.12	356.47
04:45	-6.21	352.97
05:00	-6.37	349.48
05:15	-6.60	345.99
05:30	-6.88	342.50
05:45	-7.22	339.01
06:00	-7.62	335.53
06:15	-8.08	332.05
06:30	-8.59	328.57
06:45	-9.15	325.10
07:00	-9.77	321.63
07:15	-10.43	318.17
07:30	-11.14	314.70
07:45	-11.89	311.24
08:00	-12.68	307.78
08:15	-13.51	304.32
08:30	-14.38	300.85
08:45	-15.28	297.38
09:00	-16.21	293.90
09:15	-17.16	290.41
09:30	-18.14	286.91
09:45	-19.13	283.39
10:00	-20.14	279.86 
10:15	-21.16	276.31
10:30	-22.19	272.74
10:45	-23.22	269.14
11:00	-24.25	265.52 
11:15	-25.27	261.86
11:30	-26.29	258.17
11:45	-27.29	254.44 
12:00	-28.27	250.67
12:15	-29.23	246.87
12:30	-30.17	243.01
12:45	-31.07	239.11 
13:00	-31.94	235.16
13:15	-32.76	231.17
13:30	-33.54	227.12
13:45	-34.28	223.03
14:00	-34.95	218.89
14:15	-35.57	214.70
14:30	-36.13	210.47
14:45	-36.62	206.20
15:00	-37.04	201.89
15:15	-37.39	197.54
15:30	-37.66	193.18
15:45	-37.86	188.79
16:00	-37.98	184.39
16:15	-38.02	179.98
16:30	-37.98	175.57
16:45	-37.86	171.16
17:00	-37.67	166.78
17:15	-37.40	162.41
17:30	-37.05	158.06
17:45	-36.63	153.75
18:00	-36.14	149.48
18:15	-35.59	145.25
18:30	-34.97	141.06
18:45	-34.30	136.92
19:00	-33.57	132.82
19:15	-32.79	128.78
19:30	-31.96	124.78
19:45	-31.10	120.83
20:00	-30.20	116.93
20:15	-29.27	113.08
20:30	-28.31	109.27
20:45	-27.33	105.50
21:00	-26.33	101.77
21:15	-25.31	98.08
21:30	-24.29	94.42
21:45	-23.27	90.80
22:00	-22.24	87.20
22:15	-21.21	83.63
22:30	-20.20	80.08
22:45	-19.19	76.55
23:00	-18.20	73.03
23:15	-17.23	69.53
23:30	-16.28	66.04
23:45	-15.35	62.56
24:00	-14.46	59.09`;

const allLines = str.split("\n").slice(20);
const size = Math.round(allLines.length / 16);

const lines = allLines.filter((line, index) => {
   return (index % size) === 0;
});

const result = lines.map((line, index) => {
    const div = line.split("\t");
    return {
        "fileName": `build/photos/${index + 1}.jpg`,
        "isPrimary": ( index === 13 ),
        "isForLight": ( index === 0 ),
        "isForDark": ( index === 15 ),
        "altitude": Number(div[1]),
        "azimuth": Number(div[2])
    };
});

process.stdout.write(JSON.stringify(result, null, 4));
process.exit(0);